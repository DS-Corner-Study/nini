// 리액트의 3가지 특징
/* 컴포넌트 기반의 유연성
리액트는 유연성이 있기 때문에 새로운 기능을 추가하거나 기능을 업그레이드할 때 코드를 많이 수정하지 않아도 됩니다. 유연성이 없을때 어떤 문제가 발생하는지 그리고 리액트가 채택한 ‘컴포넌트’ 개념이 유연성 문제를 어떻게 해결하는지 살펴보겠습니다.
*/
/* 컴포넌트 기반의 유연한 구조
리액트는 모듈화를 이용해 중복 코드를 제거합니다. 즉, 여러 페이지에서 공통으로 사용하는 코드를 ‘컴포넌트’ 단위의 모듈로 만들어 놓고 필요할 때 호출해 사용합니다. 
*/
/* 쉽고 간단한 업데이트
웹에서 페이지를 업데이트하려면 문서 객체 모델(Document Object Model, DOM)을 조작해야 합니다. 문서 객체 모델은 줄여서 돔(Dom)이라고 부릅니다. 앞으로는 문서 객체 모델을 돔이라고 하겠습니다. 돔은 HTML 코드를 트리 형태로 변환한 구성물입니다. 
돔은 웹 브라우저가 직접 생성하며, HTML 코드를 렌더링하기 위해 만듭니다. 렌더링(Rendering)이란 브라우저가 웹의 3가지 언어 HTML, CSS, 자바스크립트를 해석해 페이지의 요소를 실제로 그려내는 과정입니다.
*/
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <script>
      function onClickButton() {
        const h1Elm = document.getElementById("h1"); ②
        h1Elm.innerText = "반가워요!"; ③
      }
    </script>
  </head>
  <body>
    <h1 id="h1">안녕하세요!</h1>
    <button onclick="onClickButton()">인사말 바꾸기</button> ①
  </body>
</html>

// 리액트 앱
/* Create React App으로 복잡한 설정 없이 리액트 앱 만들 수 있음
Create React App으로 만든 리액트 앱에는 웹 서버가 내장되어 있음.
npm run start 명령을 실행하면 브라우저가 리액트 앱에 접속하도록 앱에
내장된 웹 서버가 동작함
*/
// 리액트 앱의 동작 방식
1. localhost:3000으로 접속을 요청하면 public 폴더의 Index.html을 반환합니다.
2. index.html에는 src 폴더의 index.js와 해당 파일이 가져오는 자바스크립트 파일을 한데 묶어 놓은 bundle.js를 불러옵니다. <script> 태그에서 자동으로 추가합니다.
3. bundle.js가 실행되어 index.js에서 작성한 코드가 실행됩니다.
4. Index.js는 ReactDOM.createRoot 메서드로 돔에서 리액트 앱의 루트가 될 요소를 지정합니다.
5. render 메서드를 사용해 돔의 루트 아래에 자식 컴포넌트를 추가합니다. 결과적으로 App 컴포넌트가 렌더링됩니다.
